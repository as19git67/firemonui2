import Vue from 'vue'
import App from './App.vue'
import store from './store'
import router from './router'
import vuetify from './plugins/vuetify';
import 'roboto-fontface/css/roboto/roboto-fontface.css'
import '@mdi/font/css/materialdesignicons.css'

import axios from 'axios'

import Vuetify from 'vuetify'
import de from 'vuetify/es5/locale/de'
import moment from 'moment'

import 'leaflet/dist/leaflet.css'
import L from 'leaflet'
import VueNativeSock from 'vue-native-websocket'
import VuetifyConfirm from 'vuetify-confirm'
import Passphrase from '@/components/Passphrase.vue'
import ModalDialogForm from '@/components/ModalDialogForm.vue'

// need the following to replace urls for icons with the ones in this webpack
delete L.Icon.Default.prototype._getIconUrl
L.Icon.Default.mergeOptions({
  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),
  iconUrl: require('leaflet/dist/images/marker-icon.png'),
  shadowUrl: require('leaflet/dist/images/marker-shadow.png')
})

moment.locale('de')

let originUrl = new URL(location.origin)

if (process.env.NODE_ENV === 'development') {
  originUrl = new URL(process.env.SERVER_URL)
  console.log(`Using development server with origin ${originUrl}`)
}

axios.defaults.baseURL = originUrl.origin

/*
#####  Color Palette by Paletton.com
#####  Palette URL: http://paletton.com/#uid=3030u0ktgntkpurpSsfwRjeGYdZ
***
*** Primary color:
   shade 0 = #BB1C10 = rgb(187, 28, 16) = rgba(187, 28, 16,1) = rgb0(0.733,0.11,0.063)
   shade 1 = #F26358 = rgb(242, 99, 88) = rgba(242, 99, 88,1) = rgb0(0.949,0.388,0.345)
   shade 2 = #E1382B = rgb(225, 56, 43) = rgba(225, 56, 43,1) = rgb0(0.882,0.22,0.169)
   shade 3 = #990B00 = rgb(153, 11,  0) = rgba(153, 11,  0,1) = rgb0(0.6,0.043,0)
   shade 4 = #6F0800 = rgb(111,  8,  0) = rgba(111,  8,  0,1) = rgb0(0.435,0.031,0)
***
*** Secondary color (1):
   shade 0 = #0C6672 = rgb( 12,102,114) = rgba( 12,102,114,1) = rgb0(0.047,0.4,0.447)
   shade 1 = #388994 = rgb( 56,137,148) = rgba( 56,137,148,1) = rgb0(0.22,0.537,0.58)
   shade 2 = #1C7C8A = rgb( 28,124,138) = rgba( 28,124,138,1) = rgb0(0.11,0.486,0.541)
   shade 3 = #02525E = rgb(  2, 82, 94) = rgba(  2, 82, 94,1) = rgb0(0.008,0.322,0.369)
   shade 4 = #013C44 = rgb(  1, 60, 68) = rgba(  1, 60, 68,1) = rgb0(0.004,0.235,0.267)
***
*** Secondary color (2):
   shade 0 = #73AD0F = rgb(115,173, 15) = rgba(115,173, 15,1) = rgb0(0.451,0.678,0.059)
   shade 1 = #ACE151 = rgb(172,225, 81) = rgba(172,225, 81,1) = rgb0(0.675,0.882,0.318)
   shade 2 = #92D028 = rgb(146,208, 40) = rgba(146,208, 40,1) = rgb0(0.573,0.816,0.157)
   shade 3 = #598E00 = rgb( 89,142,  0) = rgba( 89,142,  0,1) = rgb0(0.349,0.557,0)
   shade 4 = #416700 = rgb( 65,103,  0) = rgba( 65,103,  0,1) = rgb0(0.255,0.404,0)
***
#####  Generated by Paletton.com (c) 2002-2014
 */

Vue.use(Vuetify, {
  theme: {
    primary: '#990b00',
    secondary: '#0c6672',
    accent: '#bb1e10',
    error: '#9A0D55',
    warning: '#BB6210',
    info: '#388994',
    success: '#73ad0f'
  },
  lang: {
    locales: {de},
    current: 'de'
  },
  iconfont: 'mdi'
})

Vue.config.productionTip = false

/* eslint-disable no-new */

Vue.filter('toCurrency', function (value) {
  if (typeof value !== 'number') {
    return value
  }
  let formatter = new Intl.NumberFormat('de-DE', {
    style: 'currency',
    currency: 'EUR',
    minimumFractionDigits: 2
  })
  return formatter.format(value)
})

Vue.filter('toDate', function (value) {
  if (value && moment.isMoment(value)) {
    value.locale('de')
    let f = value.format('L LTS')
    return f
  } else {
    return ''
  }
})

let wsUrl
if (originUrl.protocol === 'http:') {
  wsUrl = `ws://${originUrl.host}${originUrl.pathname}`
} else {
  wsUrl = `wss://${originUrl.host}${originUrl.pathname}`
}

Vue.use(VueNativeSock, wsUrl, {
  store: store,
  reconnection: true, // (Boolean) whether to reconnect automatically (false)
  reconnectionDelay: 5000
})

Vue.use(VuetifyConfirm)

function InstallPassphrase (Vue) {
  const property = '$askPassphrase'

  function createDialogCmp (options) {
    return new Promise(resolve => {
      const cmp = new Vue(Object.assign(Passphrase, {
        destroyed: () => {
          document.body.removeChild(cmp.$el)
          resolve(cmp.value)
        }
      }))
      Object.assign(cmp, Vue.prototype.$askPassphrase.options || {}, options)
      document.body.appendChild(cmp.$mount().$el)
    })
  }

  function show (message, options = {}) {
    options.message = message
    return createDialogCmp(options)
  }

  Vue.prototype[property] = show
  Vue.prototype[property].options = {}
}

Vue.use(InstallPassphrase)

function InstallDialogForm (Vue) {
  const property = '$modalDialogForm'

  function createDialogCmp (options) {
    return new Promise(resolve => {
      const cmp = new Vue(Object.assign(ModalDialogForm, {
        destroyed: () => {
          document.body.removeChild(cmp.$el)
          resolve(cmp.formData)
        }
      }))
      Object.assign(cmp, Vue.prototype.$modalDialogForm.options || {}, options)
      document.body.appendChild(cmp.$mount().$el)
    })
  }

  function show (options = {}) {
    return createDialogCmp(options)
  }

  Vue.prototype[property] = show
  Vue.prototype[property].options = {}
}

Vue.use(InstallDialogForm)

new Vue({
  store,
  router,
  vuetify,
  render: h => h(App)
}).$mount('#app')
